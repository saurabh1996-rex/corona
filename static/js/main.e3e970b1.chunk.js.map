{"version":3,"sources":["components/Chart/Charts.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Charts.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3e970b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1cpqR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__NmHGT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"font-link\":\"Cards_font-link__1l2NE\",\"container\":\"Cards_container__3tZjg\",\"card\":\"Cards_card__3iZmz\",\"infected\":\"Cards_infected__3-v4M\",\"recovered\":\"Cards_recovered__3YZ45\",\"deaths\":\"Cards_deaths__2-YQg\"};","import React from 'react';\r\nimport { Card,CardContent,Typography,Grid } from '@material-ui/core';\r\nimport styles  from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards=({data:{confirmed,recovered,deaths,lastUpdate}})=> {\r\n    if(!confirmed)\r\n    return (\"LOADING>>>>>>>>\");\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs= {12} md={3} className = {cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp\r\n                        start = {0}\r\n                        end = {confirmed.value}\r\n                        duration = {2.5}\r\n                        separator = \",\"\r\n                        />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Active Cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs= {12} md={3} className = {cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp\r\n                        start = {0}\r\n                        end = {recovered.value}\r\n                        duration = {2.5}\r\n                        separator = \",\"\r\n                        />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Recovered Cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs= {12} md={3} className = {cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp\r\n                        start = {0}\r\n                        end = {deaths.value}\r\n                        duration = {2.5}\r\n                        separator = \",\"\r\n                        />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Deaths</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\n\r\nconst url ='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async(country) =>{\r\n    let changeableUrl = url;\r\n    if (country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\ntry {\r\n    const {data:{confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths,lastUpdate,};\r\n\r\n\r\n} catch (error) {\r\n    console.log(error);\r\n}\r\n}\r\n\r\nexport const fetchDailyData = async() =>{\r\ntry {\r\n    const {data} = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((dailyData)=>({\r\n        confirmed: dailyData.confirmed.total,\r\n        deaths: dailyData.deaths.total,\r\n        date: dailyData.reportDate,\r\n    }));\r\n     return modifiedData;\r\n\r\n} catch (error) {\r\n    console.log(error);\r\n}\r\n}\r\n\r\nexport const fetchCountries = async() =>{\r\n    try {\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React, {useState,useEffect}from 'react'\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line,Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Charts.module.css';\r\n\r\n\r\nconst Charts=({data:{confirmed,recovered,deaths},country}) => {\r\n\r\n    const [dailyData,setDailyData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n\r\n        const fetchAPI = async() => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        console.log(dailyData);\r\n        fetchAPI();\r\n    },[]);\r\n    console.log(confirmed,recovered,deaths);\r\n    const lineChart =(\r\n        dailyData.length ?\r\n        (\r\n        <Line\r\n        data={{\r\n            labels: dailyData.map(({date})=>date),\r\n            datasets:[{\r\n                data:dailyData.map(({confirmed})=>confirmed),\r\n                label:'Infected',\r\n                borderColor:'#3333ff',\r\n                fill:true,\r\n            },{\r\n                data:dailyData.map(({deaths})=>deaths),\r\n                label:'Deaths',\r\n                borderColor:'red',\r\n                backgroundColor:'rgba(255,0,0,0.5)',\r\n                fill:true,\r\n            }],\r\n        }}\r\n        \r\n        />): null\r\n\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed?\r\n        (\r\n            <Bar\r\n            data={{\r\n                labels:['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                    label:'People',\r\n                    backgroundColor :  ['rgba(0, 0, 255, 0.5)','rgba(0, 255, 0, 0.5)','rgba(255, 0, 0, 0.5)'],\r\n                    data:[confirmed.value, recovered.value, deaths.value],\r\n                }],\r\n            }}\r\n            options={{\r\n                legend: {display:false},\r\n                title:{display:true, text:`Current situation in ${country}`},\r\n            }}\r\n            />\r\n        ):null\r\n\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts;\r\n","import React,{useState,useEffect} from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\nconst CountryPicker= ({handleCountryChange}) => {\r\n    const [fetchedCountries,setFetchedCountries] = useState([]);\r\n\r\nuseEffect(() => {\r\n    const fetchAPI =async()=>{\r\n        setFetchedCountries(await fetchCountries());\r\n    }\r\n    console.log(fetchAPI);\r\n    fetchAPI();\r\n}, [setFetchedCountries]);\r\n    return (\r\n        <FormControl className = {styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country,i)=> <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;\r\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\r\nimport {Cards,Charts, CountryPicker } from './components';\r\nimport { fetchData } from './api';\r\nimport styles from './App.module.css';\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component{\r\n    state = {\r\n        data:{},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data: fetchedData});\r\n    }\r\n    handleCountryChange = async(country)=>{\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data: fetchedData, country: country});\r\n    }\r\n\r\n\r\n    render(){\r\n        const {data,country} = this.state;\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Charts data={data} country ={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"font-link\":\"App_font-link__UYle8\",\"container\":\"App_container__lrcTl\",\"image\":\"App_image__2RDbD\"};"],"sourceRoot":""}